@model Entities.Models.ViewModels.DashboardViewModel


@{
    Layout = "~/Views/Shared/Admin/_AdminLayout.cshtml";
}


<div class="db-info-wrap">
    <!-- Top Row With Statistics START-->
    <div class="row">
        <!-- Item -->
        <div class="col-xl-4 col-sm-6">
            <div class="db-info-list">
                <div class="dashboard-stat-icon bg-blue">
                    <i class="far fa-chart-bar"></i>
                </div>
                <div class="dashboard-stat-content">
                    <h4>Today Bookings</h4>
                    <h5>@Model.TodayBookings.Count</h5>
                </div>
            </div>
        </div>
        <!-- Item -->
        <div class="col-xl-4 col-sm-6">
            <div class="db-info-list">
                <div class="dashboard-stat-icon bg-green">
                    <i class="fas fa-euro-sign"></i>
                </div>
                <div class="dashboard-stat-content">
                    <h4>Earnings</h4>
                    <h5>@Model.Earnings</h5>
                </div>
            </div>
        </div>
        <!-- Item -->
        <div class="col-xl-4 col-sm-6">
            <div class="db-info-list">
                <div class="dashboard-stat-icon bg-purple">
                    <i class="fas fa-users"></i>
                </div>
                <div class="dashboard-stat-content">
                    <h4>Users</h4>
                    <h5>@Model.Users.Count</h5>
                </div>
            </div>
        </div>
    </div>
    <!-- Top Row With Statistics END-->
    <!-- Recent Booking & Package Enquiry START-->
    <div class="row">
        <div class="col-lg-12">
            <div class="dashboard-box table-opp-color-box">
                <h4>Recent Bookings</h4>
                <div class="table-responsive">
                    <table class="table">
                        <thead>
                            <tr>
                                <th>User</th>
                                <th>Booking Date</th>
                                <th>Destination</th>
                                <th>Trip Date</th>
                            </tr>
                        </thead>
                        <tbody>
                            @foreach (var booking in Model.RecentBookings)
                            {
                                foreach (var package in booking.Packages)
                                {
                                    <tr class="package">
                                        <td>
                                            <span>@booking.FirstName @booking.LastName</span>
                                        </td>
                                        <td>@booking.PurchaseDate.ToShortDateString()</td>
                                        <td>@package.Destinations</td>
                                        <td>@package.TripDate.ToShortDateString()</td>
                                    </tr>
                                }
                            }

                        </tbody>
                    </table>
                </div>
            </div>
        </div>
    </div>
    <!-- Recent Booking & Package Enquiry  END-->
    <!-- User Details START-->
    <div class="row">
        <div class="col-lg-12">
            <div class="dashboard-box">
                <h4>User Details</h4>
                <div class="table-responsive">
                    <table class="table">
                        <thead>
                            <tr>
                                <th>Username</th>
                                <th>First Name</th>
                                <th>Last Name</th>
                                <th>Phone</th>
                                <th>Email</th>
                                <th>Country</th>
                                <th>Bookings</th>
                                <th>Reviews</th>
                            </tr>
                        </thead>
                        <tbody>
                            @foreach (var user in Model.Users)
                            {
                            <tr>
                                <td>
                                    <a href="#"><span class="list-name">@user.UserName</span></a>
                                </td>
                                <td>@user.FirstName</td>
                                <td>@user.LastName</td>
                                <td>@user.PhoneNumber</td>
                                <td>@user.Email</td>
                                <td>@user.Country</td>

                                @if (user.Bookings != null)
                                {
                                    <td>
                                        <span class="badge badge-success">@user.Bookings.Count</span>
                                    </td>
                                }
                                else
                                {

                                    <td>
                                        <span class="badge badge-success">0</span>
                                    </td>
                                }

                                @if (user.Comments != null)
                                {
                                    <td>
                                        <span class="badge badge-dark">@user.Comments.Count</span>
                                    </td>
                                }
                                else
                                {

                                    <td>
                                        <span class="badge badge-success">0</span>
                                    </td>
                                }

                            </tr>
                            }
                        </tbody>
                    </table>
                </div>
            </div>
        </div>
    </div>
    <!-- User Details END-->
    <!--  Reports START-->
    <div class="row">
        <!-- Reports START-->
        <!-- Reports END-->
    </div>
    <!--  Reports END-->
    <!--Bottom Charts & Statistics START-->
    <div class="row">





        <!-- Bar Chart -->
        <div class="col-lg-4">

            <div class="dashboard-box chart-box">
                <canvas id="linechart" width="400" height="400"></canvas>
            </div>

        </div>
        <div class="col-lg-4">

            <div style="background-color:ghostwhite">
                <canvas id="barchart" width="400" height="400"></canvas>
            </div>

        </div>







        <!--Bottom Charts & Statistics END-->
    </div>
</div>


<script src="~/Theme/TravelAgency/admin/assets/js/canvasjs.min.js"></script>
<script src="~/Theme/TravelAgency/admin/assets/js/chart.js"></script>
<script src="~/Scripts/Chart.js"></script>
@section scripts{

    <script>

        var Income =@Html.Raw(Json.Encode(ViewBag.Income));
            var Titles =@Html.Raw(Json.Encode(ViewBag.Titles));
        const CHART = document.getElementById("linechart");
        console.log(CHART);
        let linechart = new Chart(CHART, {
            type: 'line',
            data: {
                labels: Titles,
                datasets: [
                    {
                        label: "Income",
                        fill: false,
                        lineTension: 0.1,
                        backgroundColor: "rgba(75,192,192,0.4)",
                        borderColor: "rgba(75,192,192,1)",
                        borderCapStyle: 'butt',
                        borederDash: [],
                        borderDashOffset: 0.0,
                        borderJoinStyle: 'miter',
                        pointBorderColor: "rgba(75,192,192,1)",
                        pointBackgroundColor: "#fff",
                        pointBorderWidth: 1,
                        pointHoverRadius: 5,
                        pointHoverBackgroundColor: "rgba(75,192,192,1)",
                        pointHoverBorderColor: "rgba(220,220,220,1)",
                        pointHoverBorderWidth: 2,
                        pointRadius: 1,
                        pointHitRadius: 10,
                        data: Income,
                    }



                ]
            },
             options: {
                scales: {
                    yAxes: [{
                        display: true,
                        ticks: {
                            suggestedMin: 0,    // minimum will be 0, unless there is a lower value.
                            // OR //
                            beginAtZero: true   // minimum value will be 0.
                        }
                    }]
                }
            },


        })



            var Times =@Html.Raw(Json.Encode(ViewBag.Times));
            var Titles =@Html.Raw(Json.Encode(ViewBag.Titles));
           var info = document.getElementById('barchart').getContext('2d');
            var BarChart = new Chart(info, {

                type: 'bar',
                data: {
                    labels: Titles,
                    datasets: [{
                        label: "Favourite Package",
                        data:  Times,
                        backgroundColor: ['rgba(255, 99, 132, 0.2)',
                            'rgba(54, 162, 235, 0.2)',
                            'rgba(255, 206, 86, 0.2)',
                            'rgba(75, 192, 192, 0.2)',
                            'rgba(153, 102, 255, 0.2)',
                            'rgba(255, 159, 64, 0.2)'],
                        borderColor: ['rgba(255, 99, 132, 1)',
                            'rgba(54, 162, 235, 1)',
                            'rgba(255, 206, 86, 1)',
                            'rgba(75, 192, 192, 1)',
                            'rgba(153, 102, 255, 1)',
                            'rgba(255, 159, 64, 1)'],
                        borderWidth:1
                    }]
                },
               options : {
                    scales: {
                        yAxes: [{
                            display: true,
                            ticks: {
                                suggestedMin: 0,    // minimum will be 0, unless there is a lower value.
                                // OR //
                                beginAtZero: true   // minimum value will be 0.
                            }
                        }]
                    }
                },







            });




    </script>

}








